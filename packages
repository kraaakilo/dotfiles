#!/bin/env sh

# Function to display an error message and exit
function error_exit {
    echo -e "${RED}$1${NO_COLOR}" 1>&2
    exit 1
}

function log {
    echo "$(date +'%Y-%m-%d %H:%M:%S') - $1";
}

function install_yay {
    if [[ "$EUID" -eq 0 ]]; then
        error_exit "Please run this script as a non-root user with sudo privileges."
    fi
    sudo -v || error_exit "Failed to obtain sudo privileges."
    echo "Updating system and installing necessary packages..."
    sudo pacman -Syu --needed base-devel git --noconfirm || error_exit "Failed to install base-devel and git."
    echo "Cloning the yay repository..."
    git clone https://aur.archlinux.org/yay.git || error_exit "Failed to clone the yay repository."
    cd yay || error_exit "Failed to change to the yay directory."
    echo "Building and installing yay..."
    makepkg -si --noconfirm || error_exit "Failed to build and install yay."
    cd ..
    rm -rf yay
    
    echo "yay installation completed successfully."
}

function install_packages {
    OFFICIAL_PACKAGES="misc/packages/programs.list"
    total_packages=$(grep -vcE '^\s*(#|$)' "$OFFICIAL_PACKAGES")
    current_package=0

    RED='\033[0;31m'
    GREEN='\033[0;32m'
    BLUE='\033[0;34m'
    NO_COLOR='\033[0m'

    echo "Reading package list from $OFFICIAL_PACKAGES."

    while IFS= read -r package || [[ -n "$package" ]]; do
        if [[ ! -z "$package" && "$package" != \#* ]]; then
            ((current_package++))
            progress=$(echo "scale=2; $current_package / $total_packages * 100" | bc)

            if pacman -Q "$package" &> /dev/null; then
                echo -e "${BLUE}[ $(printf "%5.1f" $progress)% ] $package is already installed. Skipping...${NO_COLOR}"
                continue
            fi

            echo -e "${GREEN}[ $(printf "%5.1f" $progress)% ] Installing $package...${NO_COLOR}"
            if yay -S --noconfirm "$package" &> /dev/null; then
                if pacman -Q "$package" &> /dev/null; then
                    echo -e "${GREEN}[ OK ] $package installed successfully.${NO_COLOR}"
                else
                    echo -e "${RED}[ NOT FOUND ] Package $package not found.${NO_COLOR}"
                fi
            else
                echo -e "${RED}[ FAILED ] Failed to install $package.${NO_COLOR}"
                error_exit "Failed to install $package."
            fi
        fi
    done < "$OFFICIAL_PACKAGES"
    echo -e "${GREEN}Official packages installation completed successfully.${NO_COLOR}"
}

function install_oh_my_zsh {
    # Install Oh My Zsh
    log "Installing Oh My Zsh"
    sh -c "$(curl -fsSL https://raw.github.com/ohmyzsh/ohmyzsh/master/tools/install.sh)" || error_exit "Failed to install Oh My Zsh"
    
    # Install Oh My Zsh plugins
    log "Installing Oh My Zsh plugins"
    
    # Install zsh-autosuggestions
    log "Installing zsh-autosuggestions"
    git clone https://github.com/zsh-users/zsh-autosuggestions ${ZSH_CUSTOM:-~/.oh-my-zsh/custom}/plugins/zsh-autosuggestions || error_exit "Failed to install zsh-autosuggestions"
    
    # Install zsh-syntax-highlighting
    log "Installing zsh-syntax-highlighting"
    git clone https://github.com/zsh-users/zsh-syntax-highlighting.git ${ZSH_CUSTOM:-~/.oh-my-zsh/custom}/plugins/zsh-syntax-highlighting || error_exit "Failed to install zsh-syntax-highlighting"
}

function setup_tmux {
    # Setup TPM (Tmux Plugin Manager)
    log "Installing TPM (Tmux Plugin Manager)"
    git clone https://github.com/tmux-plugins/tpm ~/.tmux/plugins/tpm || error_exit "Failed to install TPM (Tmux Plugin Manager)"
}

function main {
    if [[ "$#" -eq 0 ]]; then
        echo "Usage: $0 [yay|default|omz|tmux|all]"
        exit 1
    fi

    for option in "$@"; do
        case "$option" in
            yay)
                install_yay
                ;;
            default)
                install_packages
                ;;
            omz)
                install_oh_my_zsh
                ;;
            tmux)
                setup_tmux
                ;;
            all)
                install_yay
                install_packages
                install_oh_my_zsh
                setup_tmux
                ;;
            *)
                echo "Invalid option: $option"
                exit 1
                ;;
        esac
    done
}

main "$@"
